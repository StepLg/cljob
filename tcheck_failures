#!/usr/bin/env python

from optparse import OptionParser
import sys
from fnmatch import fnmatch

from cljob.opts import parse_host_paths_file

def main():
    optparser = OptionParser()
    optparser.add_option('-p', '--percent', type='int', dest='percent', \
                         default='5', action='store', metavar='NUM',      \
                         help='maximum percent of failures')
    optparser.add_option('-a', '--absolute', type='int', dest='absolute', \
                         default='20', action='store', metavar='NUM',     \
                         help='maximum number of failures')

    opts, args = optparser.parse_args()
    if len(args) != 2:
        optparser.error("Need to specify initial host paths file and failed host paths file.")

    ihpaths = parse_host_paths_file(args[0], '')
    ehpaths = parse_host_paths_file(args[1], '')

    all_hpaths = 0
    excluded = 0
    for host, paths in ihpaths.iteritems():
        all_hpaths += len(paths)
        if host not in ehpaths:
            continue
        for ipath in paths:
            for epath in ehpaths[host]:
                if epath == '*' or fnmatch(ipath, epath):
                    excluded += 1
                    break

    if excluded > opts.absolute:
        msg = "There is %s failures, what is more than %s." % (excluded, opts.absolute)
        print >> sys.stderr, msg
        sys.exit(1)

    if excluded > all_hpaths * opts.percent / 100 :
        msg = "There is %s failures, what is more than %s percents = %s hpaths." % (excluded, \
                                                 opts.percent, all_hpaths * opts.percent / 100)
        print >> sys.stderr, msg
        sys.exit(1)

if __name__ == '__main__':
    main()
